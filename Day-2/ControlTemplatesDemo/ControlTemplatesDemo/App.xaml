<Application
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
	x:Class="ControlTemplatesDemo.App"
	StartupUri="MainWindow.xaml">
	<Application.Resources>
		<!-- Resources scoped at the Application level should be defined here. -->
		<LinearGradientBrush x:Key="TextBlockBackgroundBrush" EndPoint="0.106,0.604" MappingMode="RelativeToBoundingBox" StartPoint="1.016,0.579">
			<GradientStop Color="Black" Offset="1"/>
			<GradientStop Color="White"/>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="TextBlockForegroundBrush" Color="#FFF7F7F7"/>
		<Style TargetType="{x:Type TextBlock}">
			<Setter Property="TextWrapping" Value="NoWrap"/>
			<Setter Property="TextTrimming" Value="None"/>
			<Setter Property="Background" Value="{DynamicResource TextBlockBackgroundBrush}"/>
			<Setter Property="Foreground" Value="{DynamicResource TextBlockForegroundBrush}"/>
		</Style>
		<SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
		<SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
		<Style x:Key="EmptyCheckBoxFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="CheckRadioFocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type CheckBox}">
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
			<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="0.5*"/>
								<ColumnDefinition Width="0.5*"/>
							</Grid.ColumnDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CheckStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.5">
											<VisualTransition.GeneratedEasingFunction>
												<BounceEase EasingMode="EaseInOut"/>
											</VisualTransition.GeneratedEasingFunction>
										</VisualTransition>
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Checked">
										<Storyboard>
											<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Grid.Column)" Storyboard.TargetName="border">
												<EasingInt32KeyFrame KeyTime="0" Value="2"/>
											</Int32AnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border1">
												<EasingColorKeyFrame KeyTime="0" Value="#FFA62B12"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border1">
												<EasingColorKeyFrame KeyTime="0" Value="#FFDB9677"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="border">
												<EasingColorKeyFrame KeyTime="0" Value="#FFA62B12"/>
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
												<EasingColorKeyFrame KeyTime="0" Value="#FFA62B12"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Unchecked"/>
									<VisualState x:Name="Indeterminate"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<VisualStateManager.CustomVisualStateManager>
								<ei:ExtendedVisualStateManager/>
							</VisualStateManager.CustomVisualStateManager>
							<ContentPresenter Margin="0" Grid.Column="1" VerticalAlignment="Center"/>
							<Grid Margin="2">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="0.2*"/>
									<ColumnDefinition Width="0.5*"/>
									<ColumnDefinition Width="0.2*"/>
								</Grid.ColumnDefinitions>
								<Border x:Name="border1" BorderBrush="#FF1217DD" BorderThickness="2" Background="#FF5BCEEC" Grid.ColumnSpan="3"/>
								<Border x:Name="border" BorderBrush="#FF1217DD" BorderThickness="1" Background="#FF1217DD" Margin="0,-1"/>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasContent" Value="true">
								<Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
								<Setter Property="Padding" Value="4,0,0,0"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Application.Resources>
</Application>